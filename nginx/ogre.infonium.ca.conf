# ogre.infonium.ca.conf 
# Nginx virtual host configuration file 
# to be included by nginx.conf

upstream ogre_mongrel_cluster {
    server 127.0.0.1:8000;
}

# the server directive is nginx's virtual host directive.
server {
    server_name ogre.infonium.ca;

    listen 80;

    # Set the max size for file uploads to 10Mb
    #client_max_body_size 10M;

    # doc root
    root /home/ogre/rails/ogre/current/public;

    access_log  /var/log/nginx/ogre.vhost.access.log main;
	  error_log   /var/log/nginx/ogre.vhost.error.log info;

	  error_page   500 502 503 504  /500.html;
    location = /500.html {
        root   /home/ogre/rails/ogre/current/public;
    }

    # cache these static files 'forever'
    #location ~ ^/(images|javascripts|stylesheets)/ {
    #    expires 10y;
    #}   

    location / {
        # needed to forward user's IP address to rails
        proxy_set_header  X-Real-IP  $remote_addr;
        proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $http_host;
        proxy_redirect false;
        proxy_max_temp_file_size 0;

        # If the file exists as a static file serve it directly without
        # running all the other rewite tests on it
        if (-f $request_filename) { 
            break; 
        }

        # check for index.html for directory index
        # if its there on the filesystem then rewite 
        # the url to add /index.html to the end of it
        # and then break to send it to the next config rules.
        #if (-f $request_filename/index.html) {
        #    rewrite (.*) $1/index.html break;
        #}

        # this is the meat of the rails page caching config
        # it adds .html to the end of the url and then checks
        # the filesystem for that file. If it exists, then we
        # rewite the url to have explicit .html on the end 
        # and then send it on its way to the next config rule.
        # if there is no file on the fs then it sets all the 
        # necessary headers and proxies to our upstream mongrels
        #if (-f $request_filename.html) {
        #    rewrite (.*) $1.html break;
        #}

        if (!-f $request_filename) {
            proxy_pass http://ogre_mongrel_cluster;
            break;
        }
    }
}